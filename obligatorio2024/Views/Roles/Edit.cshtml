@model obligatorio2024.Models.Role

@{
    ViewData["Title"] = "Edit";
}

<h1 class="category">Edit</h1>

<div class="el-que-contiene">
    <h4>Role</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="Nombre" class="control-label"></label>
                    <input asp-for="Nombre" class="form-control" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>Permisos:</label><br />
                    @foreach (var permiso in ViewBag.Permisos as List<obligatorio2024.Models.Permiso>)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="permiso-@permiso.Id" name="PermisosSeleccionados" value="@permiso.Id" @(ViewBag.PermisosSeleccionados.Contains(permiso.Id) ? "checked" : "")>
                            <label class="form-check-label" for="permiso-@permiso.Id">@permiso.NombrePermiso</label>
                        </div>
                    }
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-create-custom" />
                </div>
            </form>
        </div>
    </div>
    <div>
        <a asp-action="Index" class="btn btn-create-custom">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
